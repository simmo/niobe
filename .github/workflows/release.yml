name: Release

on:
  workflow_dispatch:
    inputs:
      release:
        default: prerelease
        description: 'Type'
        options:
          - prerelease
          - prepatch
          - preminor
          - premajor
          - patch
          - minor
          - major
        required: true
        type: choice
      dry-run:
        default: false
        description: 'Dry Run'
        type: boolean
  workflow_run:
    workflows: [CI]
    types: [completed]
    branches: [main]

env:
  RELEASE: ${{ inputs.release || 'prerelease' }}

jobs:
  ci:
    name: CI
    if: github.event_name == 'workflow_dispatch'
    uses: ./.github/workflows/ci.yml
    secrets: inherit

  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        id: setup
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Configure NPM
        run: npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

      - name: Install
        run: npm ci

      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: Release
        run: npm run release -- ${{ env.RELEASE }} --ci ${{ contains(fromJSON('["premajor", "preminor", "prepatch", "prerelease"]'), env.RELEASE) && '--preRelease=beta' || '' }} --dry-run=${{ inputs.dry-run}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
